{
  "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "virtualMachineInstanceSize": {
      "type": "string",
      "defaultValue": "Standard_D3_v2",
      "metadata": {
        "description": "Virtual Machine size selection"
      }
    },
    "storageAccountName": {
      "type": "string",
      "metadata": {
        "description": "Unique DNS Name for the Storage Account where the Virtual Machine's disks will be placed."
      }
    },
    "storageAccountType": {
      "type": "string",
      "defaultValue": "Standard_LRS",
      "metadata": {
        "description": "Storage Account Type."
      }
    },
    "adminUsername": {
      "type": "string",
      "metadata": {
        "description": "Username for the Virtual Machine."
      }
    },
    "adminPassword": {
      "type": "securestring",
      "metadata": {
        "description": "Password for the Virtual Machine."
      }
    },
    "publicIPAddressResourceName": {
      "type": "string",
      "defaultValue": "",
      "metadata": {
        "description": "Name of Public IP address element."
      }
    },
    "uniqueDnsPrefixForPublicIP": {
      "type": "string",
      "defaultValue": "",
      "metadata": {
        "description": "Unique DNS Prefix for the Public IP used to access the Virtual Machine."
      }
    },
    "publicIPAddressType": {
      "type": "string",
      "defaultValue": "Static",
      "allowedValues": [
        "Dynamic",
        "Static"
      ],
      "metadata": {
        "description": "Type of public IP address"
      }
    },
    "vmName": {
      "type": "string",
      "metadata": {
        "description": "Name for FortiGate virtual appliance."
      }
    },
    "vnetResourceName": {
      "type": "string",
      "metadata": {
        "description": "Name of the Azure virtual network."
      }
    },
    "vnetFullAddressRangePrefix": {
      "type": "string",
      "defaultValue": "",
      "metadata": {
        "description": "Virtual Network Address prefix in CIDR notation"
      }
    },
    "Subnet1Prefix": {
      "type": "string",
      "defaultValue": "",
      "metadata": {
        "description": "Subnet 1 Prefix"
      }
    },
    "Subnet1Name": {
      "type": "string",
      "defaultValue": "",
      "metadata": {
        "description": "Subnet 1 Name"
      }
    },
    "Subnet2Prefix": {
      "type": "string",
      "defaultValue": "",
      "metadata": {
        "description": "Subnet 2 Prefix"
      }
    },
    "Subnet2Name": {
      "type": "string",
      "defaultValue": "",
      "metadata": {
        "description": "Subnet 2 Name"
      }
    },
    "Subnet3Prefix": {
      "type": "string",
      "defaultValue": "",
      "metadata": {
        "description": "Subnet 3 Prefix"
      }
    },
    "Subnet3Name": {
      "type": "string",
      "defaultValue": "",
      "metadata": {
        "description": "Subnet 3 Name"
      }
    },
    "fortiGateIP1": {
      "type": "string",
      "metadata": {
        "description": "Static IP for public facing NIC of the FortiGate virtual appliance."
      }
    },
    "fortiGateIP2": {
      "type": "string",
      "metadata": {
        "description": "Static IP for dmz network facing NIC of the FortiGate virtual appliance."
      }
    },
    "fortiGateIP3": {
      "type": "string",
      "metadata": {
        "description": "Static IP for internal network facing NIC of the FortiGate virtual appliance."
      }
    },
    "location": {
      "type": "string",
      "metadata": {
        "description": "location"
      }
    }
  },
  "variables": {
    "vmStorageAccountContainerName": "vhds",

    "vnetID": "[resourceId('Microsoft.Network/virtualNetworks', parameters('vnetResourceName'))]",
    "subnet1Ref": "[concat(variables('vnetID'),'/subnets/', parameters('Subnet1Name'))]",
    "subnet2Ref": "[concat(variables('vnetID'),'/subnets/', parameters('Subnet2Name'))]",
    "subnet3Ref": "[concat(variables('vnetID'),'/subnets/', parameters('Subnet3Name'))]",

    "routeTable1Name": "[concat(parameters('vmName'),'PublicFacingSubnetRoutes')]",
    "routeTable2Name": "[concat(parameters('vmName'),'DMZSubnetRoutes')]",
    "routeTable3Name": "[concat(parameters('vmName'),'InternalSubnetRoutes')]",
    "routeTable1Id": "[resourceId('Microsoft.Network/routeTables',variables('routeTable1Name'))]",
    "routeTable2Id": "[resourceId('Microsoft.Network/routeTables',variables('routeTable2Name'))]",
    "routeTable3Id": "[resourceId('Microsoft.Network/routeTables',variables('routeTable3Name'))]",

    "apiVer": "2015-06-15",

    "network_NIC_fg11_Name": "[concat(parameters('vmName'),'Nic0')]",
    "network_NIC_fg11_Id": "[resourceId('Microsoft.Network/networkInterfaces',variables('network_NIC_fg11_Name'))]",
    "network_NIC_fg12_Name": "[concat(parameters('vmName'),'Nic1')]",
    "network_NIC_fg12_Id": "[resourceId('Microsoft.Network/networkInterfaces',variables('network_NIC_fg12_Name'))]",
    "network_NIC_fg13_Name": "[concat(parameters('vmName'),'Nic2')]",
    "network_NIC_fg13_Id": "[resourceId('Microsoft.Network/networkInterfaces',variables('network_NIC_fg13_Name'))]",

    "publicIPID": "[resourceID('Microsoft.Network/publicIPAddresses',parameters('publicIPAddressResourceName'))]",

    "storage_Acct_1_Id": "[resourceId('Microsoft.Storage/storageAccounts',parameters('storageAccountName'))]",

    "compute_AvailabilitySet_FG_Name": "[concat(parameters('vmName'),'AvailSet')]",
    "compute_AvailabilitySet_FG_Id": "[resourceId('Microsoft.Compute/availabilitySets', variables('compute_AvailabilitySet_FG_Name'))]"

  },
  "resources": [
    {
      "type": "Microsoft.Compute/availabilitySets",
      "name": "[variables('compute_AvailabilitySet_FG_Name')]",
      "apiVersion": "[variables('apiVer')]",
      "location": "[parameters('location')]"
    },
    {
      "type": "Microsoft.Storage/storageAccounts",
      "name": "[concat(parameters('storageAccountName'))]",
      "apiVersion": "2015-06-15",
      "location": "[parameters('location')]",
      "properties": {
        "accountType": "[parameters('storageAccountType')]"
      }
    },
    {
      "type": "Microsoft.Network/routeTables",
      "name": "[variables('routeTable1Name')]",
      "apiVersion": "[variables('apiVer')]",
      "location": "[parameters('location')]",
      "properties": {
        "routes": [
          {
            "name": "PublicFacingtoFortigateDMZ",
            "properties": {
              "addressPrefix": "[parameters('Subnet2Prefix')]",
              "nextHopType": "VirtualAppliance",
              "nextHopIpAddress": "[parameters('fortiGateIP1')]"
            }
          },
          {
            "name": "PublicFacingtoFortigateInternal",
            "properties": {
              "addressPrefix": "[parameters('Subnet3Prefix')]",
              "nextHopType": "VirtualAppliance",
              "nextHopIpAddress": "[parameters('fortiGateIP1')]"
            }
          }
        ]
      }
    },
    {
      "type": "Microsoft.Network/routeTables",
      "name": "[variables('routeTable2Name')]",
      "apiVersion": "[variables('apiVer')]",
      "location": "[parameters('location')]",
      "properties": {
        "routes": [
          {
            "name": "FortigateDMZtoPublicFacing",
            "properties": {
              "addressPrefix": "[parameters('Subnet1Prefix')]",
              "nextHopType": "VirtualAppliance",
              "nextHopIpAddress": "[parameters('fortiGateIP2')]"
            }
          },
          {
            "name": "FortigateDMZtoInternalFacing",
            "properties": {
              "addressPrefix": "[parameters('Subnet3Prefix')]",
              "nextHopType": "VirtualAppliance",
              "nextHopIpAddress": "[parameters('fortiGateIP2')]"
            }
          },
          {
            "name": "FortigateDMZtoDefault",
            "properties": {
              "AddressPrefix": "0.0.0.0/0",
              "nextHopType": "VirtualAppliance",
              "nextHopIPAddress": "[parameters('fortiGateIP2')]"
            }
          }
        ]
      }
    },
    {
      "type": "Microsoft.Network/routeTables",
      "name": "[variables('routeTable3Name')]",
      "apiVersion": "[variables('apiVer')]",
      "location": "[parameters('location')]",
      "properties": {
        "routes": [
          {
            "name": "FortigateInternaltoPublicFacing",
            "properties": {
              "addressPrefix": "[parameters('Subnet1Prefix')]",
              "nextHopType": "VirtualAppliance",
              "nextHopIpAddress": "[parameters('fortiGateIP3')]"
            }
          },
          {
            "name": "FortigateInternaltoDMZ",
            "properties": {
              "addressPrefix": "[parameters('Subnet2Prefix')]",
              "nextHopType": "VirtualAppliance",
              "nextHopIpAddress": "[parameters('fortiGateIP3')]"
            }
          },
          {
            "name": "FortigateInternaltoDefault",
            "properties": {
              "AddressPrefix": "0.0.0.0/0",
              "nextHopType": "VirtualAppliance",
              "nextHopIPAddress": "[parameters('fortiGateIP3')]"
            }
          }
        ]
      }
    },
    {
      "apiVersion": "[variables('apiVer')]",
      "type": "Microsoft.Network/virtualNetworks",
      "name": "[parameters('vnetResourceName')]",
      "location": "[parameters('location')]",
      "properties": {
        "addressSpace": {
          "addressPrefixes": [
            "[parameters('vnetFullAddressRangePrefix')]"
          ]
        },
        "subnets": [
          {
            "name": "[parameters('Subnet1Name')]",
            "properties": {
              "addressPrefix": "[parameters('Subnet1Prefix')]",
              "routeTable": {
                "id": "[variables('routeTable1Id')]"
              }
            }
          },
          {
            "name": "[parameters('Subnet2Name')]",
            "properties": {
              "addressPrefix": "[parameters('Subnet2Prefix')]",
              "routeTable": {
                "id": "[variables('routeTable2Id')]"
              }
            }
          },
          {
            "name": "[parameters('Subnet3Name')]",
            "properties": {
              "addressPrefix": "[parameters('Subnet3Prefix')]",
              "routeTable": {
                "id": "[variables('routeTable3Id')]"
              }
            }
          }
        ]
      }
    },
    {
      "type": "Microsoft.Network/publicIPAddresses",
      "name": "[parameters('publicIPAddressResourceName')]",
      "apiVersion": "[variables('apiVer')]",
      "location": "[parameters('location')]",
      "properties": {
        "publicIPAllocationMethod": "[parameters('publicIPAddressType')]",
        "dnsSettings": {
          "domainNameLabel": "[parameters('uniqueDnsPrefixForPublicIP')]"
        }
      }
    },
    {
      "apiVersion": "[variables('apiVer')]",
      "type": "Microsoft.Network/networkInterfaces",
      "name": "[variables('network_NIC_fg11_Name')]",
      "location": "[parameters('location')]",
      "dependsOn": [
        "[variables('publicIPID')]",
        "[variables('vnetID')]"
      ],
      "properties": {
        "ipConfigurations": [
          {
            "name": "ipconfig1",
            "properties": {
              "privateIPAllocationMethod": "Static",
              "privateIPAddress": "[parameters('fortiGateIP1')]",
              "subnet": {
                "id": "[variables('subnet1Ref')]"
              },
              "publicIPAddress": {
                "id": "[variables('publicIPID')]"
              }
            }
          }
        ],
        "enableIPForwarding": true
      }
    },
    {
      "apiVersion": "[variables('apiVer')]",
      "type": "Microsoft.Network/networkInterfaces",
      "name": "[variables('network_NIC_fg12_Name')]",
      "location": "[parameters('location')]",
      "dependsOn": [
        "[variables('vnetID')]"
      ],
      "properties": {
        "ipConfigurations": [
          {
            "name": "ipconfig1",
            "properties": {
              "privateIPAllocationMethod": "Static",
              "privateIPAddress": "[parameters('fortiGateIP2')]",
              "subnet": {
                "id": "[variables('subnet2Ref')]"
              }
            }
          }
        ],
        "enableIPForwarding": true
      }
    },
    {
      "apiVersion": "[variables('apiVer')]",
      "type": "Microsoft.Network/networkInterfaces",
      "name": "[variables('network_NIC_fg13_Name')]",
      "location": "[parameters('location')]",
      "dependsOn": [
        "[variables('vnetID')]"
      ],
      "properties": {
        "ipConfigurations": [
          {
            "name": "ipconfig1",
            "properties": {
              "privateIPAllocationMethod": "Static",
              "privateIPAddress": "[parameters('fortiGateIP3')]",
              "subnet": {
                "id": "[variables('subnet3Ref')]"
              }
            }
          }
        ],
        "enableIPForwarding": true
      }
    },
    {
      "type": "Microsoft.Compute/virtualMachines",
      "name": "[parameters('vmName')]",
      "apiVersion": "[variables('apiVer')]",
      "location": "[parameters('location')]",
      "plan": {
        "name": "fortinet_fg-vm",
        "publisher": "fortinet",
        "product": "fortinet_fortigate-vm_v5"
      },
      "dependsOn": [
        "[variables('vnetID')]",
        "[concat('Microsoft.Network/networkInterfaces/',variables('network_NIC_fg11_Name'))]",
        "[concat('Microsoft.Network/networkInterfaces/',variables('network_NIC_fg12_Name'))]",
        "[concat('Microsoft.Network/networkInterfaces/',variables('network_NIC_fg13_Name'))]",
        "[concat('Microsoft.Storage/storageAccounts/',parameters('storageAccountName'))]"
      ],
      "properties": {
        "hardwareProfile": {
          "vmSize": "[parameters('virtualMachineInstanceSize')]"
        },
        "availabilitySet": {
          "id": "[variables('compute_AvailabilitySet_FG_Id')]"
        },
        "osProfile": {
          "computerName": "[parameters('vmName')]",
          "adminUsername": "[parameters('adminUsername')]",
          "adminPassword": "[parameters('adminPassword')]"
        },
        "diagnosticsProfile": {
          "bootDiagnostics": {
            "enabled": true,
            "storageUri": "[concat('http://', parameters('storageAccountName'), '.blob.core.windows.net')]"
          }
        },
        "storageProfile": {
          "imageReference": {
            "publisher": "fortinet",
            "offer": "fortinet_fortigate-vm_v5",
            "sku": "fortinet_fg-vm",
            "version": "latest"
          },
          "osDisk": {
            "name": "[concat(parameters('vmName'),'-osDisk')]",
            "caching": "ReadWrite",
            "createOption": "FromImage",
            "vhd": {
              "uri": "[concat('http://',parameters('storageAccountName'),'.blob.core.windows.net/vhds/', parameters('vmName'), '-osdisk', '.vhd')]"
            }
          },
          "dataDisks": [
            {
              "name": "[concat(parameters('vmName'),'-dataDisk')]",
              "diskSizeGB": "30",
              "lun": 0,
              "vhd": {
                "uri": "[concat('http://',parameters('storageAccountName'),'.blob.core.windows.net/vhds/', parameters('vmName'), '-datadisk', '.vhd')]"
              },
              "createOption": "Empty"
            }
          ]
        },
        "networkProfile": {
          "networkInterfaces": [
            {
              "properties": {
                "primary": true
              },
              "id": "[variables('network_NIC_fg11_Id')]"
            },
            {
              "properties": {
                "primary": false
              },
              "id": "[variables('network_NIC_fg12_Id')]"
            },
            {
              "properties": {
                "primary": false
              },
              "id": "[variables('network_NIC_fg13_Id')]"
            }
          ]
        }
      }
    }
  ]
}

